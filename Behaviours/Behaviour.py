from gametypes import *
class Behaviour:
    _subclasses_:dict[str,'Behaviour'] = {}
    def __init_subclass__(cls):
        name = cls.__name__
        if name in Behaviour._subclasses_:
            raise NameError(f'Behaviour {cls} conflicts with another. Maybe two behaviours have the same name? (<- this cannot happen)')
        Behaviour._subclasses_[name] = cls

    __slots__ = ()
        
    def start(self,gameObject:GameObjectType,game:EngineType): ...
    def update(self,gameObject:GameObjectType,game:EngineType): ... 
    def onCollide(self,gameObject:GameObjectType,other:GameObjectType): ...
    def onDeath(self,gameObject:GameObjectType,game:EngineType): ...
    def onTriggerEnter(self,gameObject:GameObjectType,other:GameObjectType,game:EngineType): ...
    def onTriggerStay(self,gameObject:GameObjectType,other:GameObjectType,game:EngineType): ...
    def onTriggerLeave(self,gameObject:GameObjectType,other:GameObjectType,game:EngineType): ...